---js
{
  // Generate one page per Contentful article entry
  pagination: {
    data: "getContentfulArticles",
    size: 1,
    alias: "post",
  },
  // Default layout for article pages
  layout: "layouts/article.njk",
  // Compute permalink from each article slug
  eleventyComputed: {
    permalink: (data) => {
      console.log('--- DEBUG: Permalink function triggered for template:', data.page?.inputPath);
      console.log('  Is data.post defined?', !!data.post); // Log if data.post exists
      if (data.post) {
        // Attempt to get slug from 'fields' first, then direct 'post' object
        const articleSlug = data.post.fields?.slug || data.post.slug;
        console.log('  Attempted slug (data.post.fields?.slug || data.post.slug):', articleSlug);

        if (articleSlug) {
          const permalinkPath = `/writing/${articleSlug}/index.html`;
          console.log('  Permalink returned:', permalinkPath);
          return permalinkPath;
        } else {
          console.log('  Permalink returned: false (article slug not found)');
          return false; // Slug is missing for a paginated item
        }
      } else {
        // This branch should be hit when article.njk is processed as a standalone file
        console.log('  Permalink returned: false (data.post is undefined, likely standalone template)');
        return false; // data.post is undefined, so don't create a page
      }
    },
  },

  // Tag for all article pages
  tags: [
    "writing",
  ],
}
---

{# content/writing/article.njk - This file generates individual article post content #}
{# Pagination and other configuration is defined in the front matter above #}

{% set title = post.headline %}
{% set lede = post.standfirst %}
{% set featuredImage = post.heroImage.url %}
{% set featuredImageAltText = post.heroImage.alt %}

<article>
    {# 'post' is the alias defined in article.11tydata.js pagination #}
    <h1>{{ post.headline }}</h1>
    {% if post.datePublished %}
        <p class="post-meta">Published: {{ post.datePublished | readableDate("yyyy-MM-dd") }}</p>
    {% endif %}

    {# Display main image if available #}
    {% if post.mainImage %}
    <div class="overflow-hidden rounded-lg mb-12 max-w-5xl mx-auto"> 
        <figure>
            {% contentfulImage
                post.mainImage,
                post.mainImage.alt,
                [400, 800, 1200],
                ["webp", "jpeg"],
                "(min-width: 800px) 800px, 100vw"
            %}
            {% if post.mainImage.caption %}
                <figcaption>{{ post.mainImage.caption }}</figcaption>
            {% endif %}
            {% if post.mainImage.photographer %}
                <p class="text-sm text-gray-500">Photo by: {{ post.mainImage.photographer }}</p>
            {% endif %}
            {% if post.mainImage.licence %}
                <p class="text-xs text-gray-400">Licence: {{ post.mainImage.licence }}</p>
            {% endif %}
        </figure>
    </div>
    {% endif %}

    <div class="prose max-w-prose w-full">
        {# renderRichTextAsHtml is the filter you added in eleventy.config.js #}
        {{ post.body | renderRichTextAsHtml | safe }}
    </div>
</article>
